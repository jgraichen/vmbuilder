#!/bin/bash

# do we have a conf param?

oconfigfile=$HOME/.ubuntu-vm-builder

for i
do
        if [ -n "$configfile" ]; then
		configfile=$i
		break
	fi
	case $i in
        -c)
                configfile=$i
        esac
done

configfile=${configfile:-}

if [ -n "$configfile" ]; then
	if [ -e "$configfile" ]; then
		. $configfile
	else
		echo "Configuration file $configfile does not exist"
		exit 1
	fi
elif [ -e $oconfigfile ]; then
	. $oconfigfile
else
	echo "Creating config file $oconfigfile"
	cat > $oconfigfile << EOF
# Configuration file for ubuntu-vm-builder
# Version: 1.0

### GUEST DEFINITIONS ###
# COMPS is the equivalent of --components
# comma seperated list of distro components to include (e.g. main,universe). Defaults to "main"
COMPS=""

# ARCH is the equivalent of --arch
# Specify the target architecture. Valid options: amd64 i386 lpia (defaults to host arch)
ARCH=""

# KERNEL_FLAVOUR is the equivalent of --kernel-flavour   
# The kernel image flavour to install 
# (default: virtual for >= gutsy on i386, lpia on lpia, server otherwise)
KERNEL_FLAVOUR=""

# PKGCMD is the equivalent of --addpkg and --removepkg
# Specify a list of packages delimited by space.  Package to remove should have a trailing '-'
PKGCMD=""

# VMUSER is the equivalent of --user
# Set the name of the user to be added. Default: ubuntu.
VMUSER=""

# PASS is the equivalent of --pass
# Set the password for the user. Default: ubuntu.
PASS=""

# NAME is the equivalent of --name
# Set the full name of the user to be added. No default.
NAME="Ubuntu"

# VMHOSTNAME is the equivalent of --hostname
# Set NAME as the hostname of the guest. Default: ubuntu
# Also uses this name as the VM name
VMHOSTNAME=""

# MEM is the equivalent of --mem
# Assign NN megabytes of memory to the guest vm.
# Default: 128
MEM=""


### GUEST NETWORKING ###
# DOMAIN is the equivalent of --domain
# Set DOMAIN as the domain name of the guest. 
# Default: The domain of the machine running this script.
DOMAIN=""

# IP is the equivalent of --ip
# IP address in dotted form (defaults to dhcp)
IP=""

# MASK is the equivalent of --mask
# IP mask in dotted form (default: 255.255.255.0)
# Useless if IP=""
MASK=""

# NET is the equivalent of --net
# IP net address (default: X.X.X.0)
# Useless if IP=""
NET=""

# BCAST is the equivalent of --bcast
# IP broadcast (default: X.X.X.255)
# Useless if IP=""
BCAST=""

# GW is the equivalent of --gw
# Gateway address (default: X.X.X.1)
# Useless if IP=""
GW=""

# DNS is the equivalent of --dns
# Name server address (default: X.X.X.1)
# Useless if IP=""
DNS=""


### GUEST PARTITIONING ###
# PARTFILE is the equivalent of --partfile
# Contains the full path to a partition definition file
PARTFILE=""

# ROOTSIZE is the equivalent of --rootsize
# Used only when PARTFILE=""
# The size in MB of the root filesystem (default 4096)
ROOTSIZE=""

# SWAPSIZE is the equivelent --swapsize
# Used only when PARTFILE=""
# The size in MB of the swap partition (default 1024)
SWAPSIZE=""

# OPTSIZE is the equivelent --optsize
# Used only when PARTFILE=""
# The size in MB of the /opt filesystem. If not set, no /opt filesystem will be added.
OPTSIZE=""


### ENVIRONMENT DEFINITIONS ###
# DESTINATION is the equivalent of --dest         
# Allows to specify the destination directory. Defaults to ubuntu-vm-<SUITE>-<ARCH>-<HOSTNAME>
# /!\ Must be a full path here (no trailing /)
DESTINATION=""

# VMTMPDIR is the equivalent of --tmp
# Use VMTMPDIR as temporary working area for the image generation. 
# Defaults to \$TMPDIR or /tmp if \$TMPDIR is not defined.
# if VMTMPDIR is set to "-" data the data will go the same directory as -d 
# if specified with a full path or the current directory if not.
VMTMPDIR=""

# TMPFS is the equivalent of --tmpfs
# Use a tmpfs as the working directory if not "", specifying its options 
# or "-" to use tmpfs default when no options are passed (different from the 
# defaults below, see tmpfs manual)
# Defaults: "suid,dev,size=1G"
TMPFS=""

# TEMPLATEDIR is the equivalent of the --templates 
# Full path to where .tmpl files are stored
# Defaults to: /usr/share/ubuntu-vm-builder/templates
TEMPLATEDIR=""

# MIRROR is the equivalent of --mirror
# Use Ubuntu mirror at URL instead of the default, which
# is http://archive.ubuntu.com/ubuntu for official arches
# and http://ports.ubuntu.com/ubuntu-ports otherwise
MIRROR=""

# ISO is the equivalent of --iso
# Use an iso image as the source for installation of file.
# Full path to the iso must be provided. If MIRROR is also
# provided, it will be used in the final sources.list of the vm.
# This requires suite and kernel parameter to match what is 
#available on the iso, obviously.
ISO=""

# SSHKEY is the equivalent of --ssh-key
# Add the given ssh public key file (absolute path)
# to root's authorized keys and install openssh-server
SSHKEY=""

# SSHUKEY is the equivalent of --ssh-user-key
# Add the given ssh public key file (absolute path)
# to the user's authorized keys and install openssh-server
SSHUKEY=""

# EXEC is the equivalent of --exec
# Run the given script file. You can use 
# 'chroot root <cmd>' to execute code in the guest.
# See 'man ubuntu-vm-builder' for more explanations
EXEC=""

# FIRTBOOT is the equivalent if --firstboot 
# Specify the path to a script that will be copied into the guest and
# executed the first time the machine boots.  This script must not be interactive.
FIRSTBOOT=""

# FIRSTLOGIN is the equivalent of --firstlogin 
# Specify the path to a script that will be copied into the guest and
# will be executed the first time the user logs in. This script can be interactive.
FIRSTLOGIN=""

# OVERWRITE is the equivalent of --overwrite
# Any non empty string forces overwrite of destination directory if it already exist
OVERWRITE=""

# VERBOSE is the equivalent --verbose
# Any non empty string cause the display of a lot of information which are mainly 
# interesting while debugging.
VERBOSE=""

# INSTALL_IN_PLACE is the equivalent of --in-place
# It installs the guest operating system directly into the disk images
# which fixes some issues with nodev and nosuid $TMPDIR, but causes 
# slightly larger disk images (deleted files still leave non-null fs blocks behind)
INSTALL_IN_PLACE=""
EOF
	CONFIG_OWNER="${SUDO_USER:-}"
	test -n "$CONFIG_OWNER" && chown "$CONFIG_OWNER:$CONFIG_OWNER" $oconfigfile
	chmod 600 $configfile
fi
