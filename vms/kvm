#
# kvm plugin for ubuntu-vm-builder
#

case "$1" in
	usage)
		echo "--libvirt <uri>  Add resulting VM to the libvirt hypervisor at <uri>."
		echo
		;;
esac

vm_getopt_args() {
	echo 'libvirt:,'
}

vm_getopt() {
	TEMP=`getopt -q -o a --long libvirt:,  -- "$@"`
	eval set -- "$TEMP"
	case "$1" in
		--libvirt)
			info "Using libvirt uri '$2'"
			LIBVIRT="$2"
			shift 2
			argsused=$(($argsused + 2))
		;;
		--)
			shift
		;;
	esac
}


vm_target_conversion () {
	QEMU_IMG_CONVERT_OPTS="-O qcow2"
	QEMU_IMG_CONVERT_EXTENSION=".qcow2"
	CMD=kvm

	if [ -n "$LIBVIRT" ]
	then
		LIBVIRTXML=`mktemp -p $TMPDIR vm-builder-XXXXXXXXXX` || exit 1
		LIBVIRTNAME="$VMHOSTNAME"
		MAC="52:54:00$(hexdump -e '/1 ":%02x"' -n 3 /dev/urandom)"
		while virsh -c "$LIBVIRT" dumpxml "$LIBVIRTNAME" > /dev/null 2>&1
		do
			LIBVIRTNAME="${LIBVIRTNAME}_"
		done
		cat > ${LIBVIRTXML} <<EOXML
<domain type='$VM'>
  <name>${LIBVIRTNAME}</name>
  <memory>$(( $MEM * 1024))</memory>
  <vcpu>1</vcpu>
  <os>
    <type>hvm</type>
    <boot dev='hd'/>
  </os>
  <clock offset='utc'/>
  <on_poweroff>destroy</on_poweroff>
  <on_reboot>restart</on_reboot>
  <on_crash>destroy</on_crash>
  <devices>
    <emulator>/usr/bin/${VM}</emulator>
    <interface type='network'>
      <mac address='${MAC}'/>
      <source network='default'/>
    </interface>
    <input type='mouse' bus='ps2'/>
    <graphics type='vnc' port='-1' listen='127.0.0.1'/>
EOXML
		let diskindex=-1
		curdisk=""
		for ((i=0;i<${#MOUNTPOINTS[@]};i++)); do
			if [ "$curdisk" != "${MOUNTDISKS[$i]}" ]; then
				let diskindex++
				img="${DISKIMGS[$diskindex]}"
				curdisk=${MOUNTDISKS[$i]}
   	           	FILES="$FILES $img.qcow2"
				cat >> ${LIBVIRTXML} << EOXML

    <disk type='file' device='disk'>
      <source file='${DESTINATION}/${img}.qcow2'/>
      <target dev='hd${curdisk}'/>
    </disk>
EOXML
			fi
		done
		cat >> ${LIBVIRTXML} << EOXML	
  </devices>
</domain>
EOXML
		virsh -c "${LIBVIRT}" define "${LIBVIRTXML}"
		rm $LIBVIRTXML
	else
   		FILES="$VMHOSTNAME.$CMD" 
		IMGFILES=""
		let diskindex=-1
		curdisk=""
		for ((i=0;i<${#MOUNTPOINTS[@]};i++)); do
			if [ "$curdisk" != "${MOUNTDISKS[$i]}" ]; then
				let diskindex++
				img="${DISKIMGS[$diskindex]}"
				curdisk=${MOUNTDISKS[$i]}
				FILES="$FILES $img.qcow2"
				IMGFILES="$IMGFILES -hd$curdisk $img.qcow2" 
			fi
		done
		cat > $VMHOSTNAME.$CMD <<EOF
#!/bin/sh
$CMD -m $MEM $IMGFILES "\$@"
EOF
			chmod +x $VMHOSTNAME.$CMD
	fi
}

#
# Add package names to PKGS
#
vm_extra_packages() {
	:
}
