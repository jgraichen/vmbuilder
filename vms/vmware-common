case "$1" in
	usage)
		echo "--templates <dir>  Look for vmware vmx templates in <dir> instead"
		echo "                   of /usr/share/ubuntu-vm-builder/templates"
		echo
		;;
esac

vm_getopt_args="templates:,"

vm_getopt() {
	# We don't really handle -a, but getopt complains if it doesn't get any short
	# options to handle. 
	TEMP=`getopt -q -o a --long $vm_getopt_args -- "$@"`
	eval set -- "$TEMP"
	case "$1" in
		--templates)
			TEMPLATEDIR="$2"
			argsused=$(($argsused + 2))
		;;
	esac
}

#
# Add package names to PKGS
#
vm_extra_packages() {
	:
}

vmware_common_target_conversion () {
	if [ $ARCH = "amd64" ]
	then
		guestos="ubuntu-64"
	else
		guestos="ubuntu"
	fi
	if [ $NUMRAW -gt 0 ]; then
                QEMU_IMG_CONVERT_OPTS=""
                QEMU_IMG_CONVERT_EXTENSION=".raw"
        else
                QEMU_IMG_CONVERT_OPTS=""
                QEMU_IMG_CONVERT_EXTENSION=".vmdk"
        fi
	cat $TEMPLATEDIR/vmware.tmpl | \
		sed -e "s/%VMHWVERSION%/${VMHWVERSION}/g" \
		-e "s/%HOSTNAME%/${VMHOSTNAME}/g" \
		-e "s/%MEM%/${MEM}/g" \
		-e "s/%ARCH%/${ARCH}/g"  \
		-e "s/%guestos%/${guestos}/g" \
		 > $VMHOSTNAME.vmx 

	chmod +x $VMHOSTNAME.vmx
	FILES="$VMHOSTNAME.vmx"
	for ((i=0;i<${#DISKIMGS[@]};i++)); do
		img = $( ${DISKIMGS[$i]} | sed s/.raw// )
		FILES="$FILES $img$QEMU_IMG_CONVERT_EXTENSION"
		let "id=$i%2"
		let "bus=$i/2"
		echo "ide${bus}:${id}.present = \"TRUE\"">>$VMHOSTNAME.vmx
		echo "ide${bus}:${id}.fileName = \"$img$QEMU_IMG_CONVERT_EXTENSION\"">>$VMHOSTNAME.vmx
	done

}
